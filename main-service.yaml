openapi: 3.0.0
info:
  title: OTM Manager API # Changed from enterprise-manager-api
  description: OTM Manager API for managing enterprise resources # Changed from Enterprise Manager API
  version: 1.0.0
servers:
  - url: http://localhost:8000/ # Changed from localhost:8001
    description: Local server
  - url: https://otm-main-production.up.railway.app/ # Changed from development server

components:
  securitySchemes:
    BasicAuth:
      type: http
      scheme: basic
    BearerAuth:
      type: http
      scheme: bearer
  parameters:
    JwtHeader:
      name: Authorization
      in: header
      schema:
        type: string
        example: Bearer {{JwtToken}}
      required: true
  schemas:
    Token:
      type: object
      properties:
        token:
          type: string
        role:
          type: string
        message:
          type: string
        user:
          type: object
        refreshToken:
          type: string
      required:
        - token
        - role
        - message
        - user
    Success:
      type: object
      properties:
        status:
          type: string
          enum:
            - Success
        message:
          type: string
        data:
          type: object
      required:
        - message
        - status
    Error:
      type: object
      properties:
        status:
          type: string
          enum:
            - Failure
        message:
          type: string
        data:
          type: object
        errorType:
          type: string
          default: INTERNAL_SERVER_ERROR
      required:
        - status
        - message
        - errorType
  responses:
    400:
      description: BadRequest
      content:
        application/json:
          schema:
            allOf:
              - $ref: "#/components/schemas/Error"
            properties:
              status:
                type: string
                default: Failure
              message:
                type: string
                default: Invalid values in request.
              errorType:
                type: string
                default: BAD_REQUEST
    401:
      description: Unauthorized
      content:
        application/json:
          schema:
            allOf:
              - $ref: "#/components/schemas/Error"
            properties:
              status:
                type: string
                default: Failure
              message:
                type: string
                default: Unauthorized Access
              errorType:
                type: string
                default: UNAUTHORIZED
    403:
      description: Forbidden
      content:
        application/json:
          schema:
            allOf:
              - $ref: "#/components/schemas/Error"
            properties:
              status:
                type: string
                default: Failure
              message:
                type: string
                default: User don't have permission to access this resource
              errorType:
                type: string
                default: FORBIDDEN
    404:
      description: Not Found
      content:
        application/json:
          schema:
            allOf:
              - $ref: "#/components/schemas/Error"
            properties:
              status:
                type: string
                default: Failure
              message:
                type: string
                default: Resource not found
              errorType:
                type: string
                default: RESOURCE_NOT_FOUND
    409:
      description: Conflict
      content:
        application/json:
          schema:
            allOf:
              - $ref: "#/components/schemas/Error"
            properties:
              status:
                type: string
                default: Failure
              message:
                type: string
                default: Resource already exists
              errorType:
                type: string
                default: RESOURCE_ALREADY_EXISTS
    500:
      description: Internal Server Error
      content:
        application/json:
          schema:
            allOf:
              - $ref: "#/components/schemas/Error"
            properties:
              status:
                type: string
                default: Failure
              message:
                type: string
                default: Something went wrong while processing your request
              errorType:
                type: string
                default: INTERNAL_SERVER_ERROR

paths:
  /api/auth/login:
    post:
      summary: Login
      tags:
        - Authentication
      description: Login using email and password to obtain JWT tokens. Also sets the refreshToken as a session cookie.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  default: test@testcompany.com
                password:
                  type: string
                  default: test-user
      responses:
        "200":
          description: Success-Response
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    default: Success
                  message:
                    type: object
                    properties:
                      token:
                        type: string
                        default: jwt
                      role:
                        type: string
                        default: Support
                      message:
                        type: string
                        default: Successfully logged in
                      user:
                        type: string
                        default: user@user.com
        "400":
          $ref: "#/components/responses/400"
        "403":
          $ref: "#/components/responses/403"
        "404":
          $ref: "#/components/responses/400"
        "401":
          $ref: "#/components/responses/401"
        "500":
          $ref: "#/components/responses/500"

  /api/auth/signup:
    post:
      summary: Signup
      tags:
        - Authentication
      description: Signup using email and password to create a new account and obtain JWT tokens. Also sets the refreshToken as a session cookie.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  default: tenant@testcompany.com
                name:
                  type: string
                  default: test-user
                password:
                  type: string
                  default: test-tenant
      responses:
        "200":
          description: Success-Response
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    default: Success
                  message:
                    type: object
                    properties:
                      token:
                        type: string
                        default: jwt
                      role:
                        type: string
                        default: Support
                      message:
                        type: string
                        default: Signup successful
                      user:
                        type: string
                        default: user@user.com
        "400":
          $ref: "#/components/responses/400"
        "403":
          $ref: "#/components/responses/403"
        "404":
          $ref: "#/components/responses/400"
        "401":
          $ref: "#/components/responses/401"
        "500":
          $ref: "#/components/responses/500"

  /workout:
    get:
      summary: Get workout summary
      tags:
        - Workout
      description: Returns a summary of workout data including color-coded client counts.
      responses:
        "200":
          description: Workout summary
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        week:
                          type: string
                          example: 20Feb-26Feb-2023
                        greenClients:
                          type: integer
                          example: 7
                        yellowClients:
                          type: integer
                          example: 3
                        redClients:
                          type: integer
                          example: 3
                        coachWiseClients:
                          type: object
                          example:
                            Sanika:
                              greenClients: 1
                              yellowClients: 0
                              redClients: 0

  /workout/aerobic:
    get:
      summary: Get aerobic workout details
      description: Retrieve a list of aerobic workouts and available equipment
      tags:
        - Workout
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  msg:
                    type: object
                    properties:
                      title:
                        type: string
                      workoutsDetails:
                        type: array
                        items:
                          type: object
                          properties:
                            id:
                              type: string
                            title:
                              type: string
                            minRounds:
                              type: integer
                            maxRounds:
                              type: integer
                            time:
                              type: string
                            notes:
                              type: array
                              items:
                                type: string
                      movement:
                        type: array
                        items:
                          type: object
                          properties:
                            id:
                              type: string
                            title:
                              type: string
                            options:
                              type: array
                              items:
                                type: object
                                properties:
                                  type:
                                    type: string
                                  gif:
                                    type: string
                            gif:
                              type: string
                  success:
                    type: boolean
              example:
                msg:
                  title: "Aerobic Workouts"
                  workoutsDetails:
                    - id: "version_1"
                      title: "Cardio Intervals"
                      minRounds: 3
                      maxRounds: 5
                      time: "5 mins"
                      notes:
                        - "2 min rest or walk after each round"
                    - id: "version_2"
                      title: "Steady state zone 2 cardio"
                      time: "20 mins"
                      notes:
                        - "Choose 1 machine for the given time"
                    - id: "version_3"
                      title: "Sprint work"
                      notes:
                        - "10-30 sec work Max effort"
                        - "3 mins rest or walk"
                  movement:
                    - id: "bike"
                      title: "Bike"
                      options:
                        - type: "assault bike"
                          gif: "https://i.gifer.com/OyUN.gif"
                        - type: "stationary bike"
                          gif: "https://i.gifer.com/OyUN.gif"
                        - type: "concept 2 bike"
                          gif: "https://i.gifer.com/OyUN.gif"
                    - id: "row"
                      title: "Row"
                      options:
                        - type: "concept 2 rower"
                          gif: "https://i.gifer.com/OyUN.gif"
                        - type: "anu other rower"
                          gif: "https://i.gifer.com/OyUN.gif"
                    - id: "elliptical"
                      title: "Elliptical"
                      gif: "https://i.gifer.com/OyUN.gif"
                    - id: "ski erg"
                      title: "Ski Erg"
                      gif: "https://i.gifer.com/OyUN.gif"
                    - id: "runner "
                      title: "Runner"
                      options:
                        - type: "treadmill"
                          gif: "https://i.gifer.com/OyUN.gif"
                        - type: "curved treadmill"
                          gif: "https://i.gifer.com/OyUN.gif"
                success: true
        "400":
          $ref: "#/components/responses/400"
        "403":
          $ref: "#/components/responses/403"
        "404":
          $ref: "#/components/responses/400"
        "401":
          $ref: "#/components/responses/401"
        "500":
          $ref: "#/components/responses/500"

  /workout/aerobic/score:
    post:
      summary: Submit aerobic workout score
      tags:
        - Workout
      description: Submit a completed aerobic workout score with details
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - memberCode
                - duration
                - calorie
                - distance
                - version
                - equipment
              properties:
                memberCode:
                  type: string
                  example: "KU"
                duration:
                  type: integer
                  description: Duration in minutes
                  example: 40
                calorie:
                  type: integer
                  description: Calories burned
                  example: 1550
                distance:
                  type: number
                  format: float
                  description: Distance covered in kilometers/miles
                  example: 2
                version:
                  type: string
                  description: Type of workout performed
                  example: "cardio_intervals"
                equipment:
                  type: string
                  description: Equipment used for workout
                  example: "bike"
      responses:
        "200":
          description: Score submitted successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  msg:
                    type: string
                    example: "successfully submitted aerobic workout"
                  success:
                    type: boolean
                    example: true
        "400":
          $ref: "#/components/responses/400"
        "401":
          $ref: "#/components/responses/401"
        "500":
          $ref: "#/components/responses/500"

  /workout/hyper/theme:
    get:
      summary: Get workout theme list
      tags:
        - Workout
      description: Retrieve available workout themes for customization
      parameters:
        - name: memberCode
          in: query
          required: true
          schema:
            type: string
          description: Member's unique code
          example: PUP6223
      responses:
        "200":
          description: List of available workout themes
          content:
            application/json:
              schema:
                type: object
                properties:
                  msg:
                    type: array
                    items:
                      type: string
                    example: ["Pull", "Squat", "Push"]
                  success:
                    type: boolean
                    example: true
        "400":
          $ref: "#/components/responses/400"
        "401":
          $ref: "#/components/responses/401"
        "500":
          $ref: "#/components/responses/500"

  /insights/weekly-activity-list:
    get:
      summary: Get Weekly Activity List
      tags:
        - Insights
      description: Returns a list of activities for the given member code.
      parameters:
        - name: memberCode
          in: query
          required: true
          schema:
            type: string
          example: PRAN
      responses:
        "200":
          description: List of weekly activities
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        date:
                          type: string
                          format: date
                          example: 2024-11-11
                        activities:
                          type: array
                          items:
                            type: string

  /insights/weekly-active-memberships:
    get:
      summary: Get weekly active memberships
      tags:
        - Insights
      description: Returns the count of active memberships for each week.
      responses:
        "200":
          description: List of weekly active memberships
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        week:
                          type: string
                          example: 20Feb-26Feb-2023
                        count:
                          type: integer
                          example: 0

  /insights/weekly-active-clients:
    get:
      summary: Get weekly active clients
      tags:
        - Insights
      description: Returns the count of active clients for each week.
      responses:
        "200":
          description: List of weekly active clients
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        week:
                          type: string
                          example: 20Feb-26Feb-2023
                        count:
                          type: integer
                          example: 13

  /lifestyle:
    get:
      summary: Get Lifestyle Details
      tags:
        - Lifestyle
      description: Fetches the lifestyle details of a user.
      parameters:
        - name: user
          in: query
          required: true
          schema:
            type: string
          example: PRAN
      responses:
        "200":
          description: Lifestyle details
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  lifeStyleDetails:
                    type: object
                    properties:
                      _id:
                        type: string
                      memberCode:
                        type: string
                      circles:
                        type: array
                        items:
                          type: object
                          properties:
                            name:
                              type: string
                            tasks:
                              type: array
                              items:
                                type: object
                                properties:
                                  id:
                                    type: string
                                  time:
                                    type: string
                                    nullable: true
                                  name:
                                    type: string
                                  taskId:
                                    type: string
                                  details:
                                    type: array
                                    items:
                                      type: object
                                      properties:
                                        description:
                                          type: string
                                        time:
                                          type: string
                                          nullable: true
                                        duration:
                                          type: string
                                          nullable: true

  /weekly-checkin:
    get:
      summary: Get Weekly Check-in
      tags:
        - Lifestyle
      description: Retrieves weekly check-in data for a specific member.
      parameters:
        - name: memberCode
          in: query
          required: true
          schema:
            type: string
          example: PRAN
      responses:
        "200":
          description: Weekly check-in data
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  data:
                    type: object
                    properties:
                      memberCode:
                        type: string
                      week:
                        type: string
                      checkin:
                        type: array
                        items:
                          type: object
                          properties:
                            date:
                              type: string
                              format: date
                              example: 2024-11-11
                            status:
                              type: string
                            details:
                              type: array
                              items:
                                type: object
                                properties:
                                  question:
                                    type: string
                                  answer:
                                    type: string
                                  comment:
                                    type: string
                                  status:
                                    type: string
                                  date:
                                    type: string
                                    format: date
                                    example: 2024-11-11

  /client/profile/coach-tools:
    get:
      summary: Get coach tools profile
      tags:
        - Coach Tools
      description: Fetches the profile data of a coach member using the provided member code.
      parameters:
        - in: query
          name: memberCode
          required: true
          schema:
            type: string
          description: The unique code for the member
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: object
                    properties:
                      name:
                        type: string
                        example: Pranav Yadav
                      code:
                        type: string
                        example: PRAN
                      email:
                        type: string
                        example: pranavyadav996@gmail.com
                      profilePicture:
                        type: string
                        example: "https://storage.googleapis.com/otm_client_profile_pictures/PRAN_Pranav_Yadav_2969.jpg"
                      # Other fields omitted for brevity

  /weekly-review/stats:
    get:
      summary: Get weekly review stats
      tags:
        - Weekly Review
      description: Fetches weekly review statistics for a member.
      parameters:
        - in: query
          name: memberCode
          required: true
          schema:
            type: string
          description: The unique member code.
      responses:
        "200":
          description: Weekly review stats response
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  msg:
                    type: string
                    example: "fetched weekly stats"
                  data:
                    type: object
                    properties:
                      week:
                        type: string
                        example: "11Nov-17Nov-2024"
                      last8WeekConsistency:
                        type: array
                        items:
                          type: object
                          properties:
                            week:
                              type: string
                              example: "18Nov-24Nov-2024"
                            count:
                              type: integer
                              example: 0
                      volume:
                        type: integer
                        example: 200
                      prValue:
                        type: integer
                        example: 123
                      prUnit:
                        type: string
                        example: "KG"
                      totalWeightLiftedDeltaValue:
                        type: integer
                        example: 500
                      totalWeightLiftedDeltaUnit:
                        type: string
                        example: "KG"
                      totalWeightLiftedDelta:
                        type: string
                        example: "less/more"  
                      metconIntensity:
                        type: array
                        items:
                          type: object
                          properties:
                            date:
                              type: string
                              example: "11 Nov 2024"
                            intensity:
                              type: integer
                              example: 123

  /weekly-review/questionnaire:
    get:
      summary: Get weekly review questionnaire
      tags:
        - Weekly Review
      description: Fetches the weekly review questionnaire.
      responses:
        "200":
          description: Weekly review questionnaire
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  msg:
                    type: string
                    example: "successfully fetched questions"
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        code:
                          type: string
                          example: "WKR1"
                        content:
                          type: string
                          example: "How would you rate your workout performance this week?"
                        description:
                          type: string
                          example: "How would you rate your workout performance this week?"
                        inputType:
                          type: string
                          example: "singleChoice"
                        rank:
                          type: string
                          example: "1"
                        screen:
                          type: string
                          example: "1"
                        target:
                          type: string
                          example: "fullPerf"
                        options:
                          type: array
                          items:
                            type: object
                            properties:
                              id:
                                type: string
                                example: "EXCELLENT"
                              value:
                                type: string
                                example: "Excellent"

    put:
      summary: Submit weekly review questionnaire
      description: Submit questionnaire responses for a specified member and week.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                memberCode:
                  type: string
                  example: KU
                week:
                  type: string
                  example: 11Nov-17Nov-2024
                response:
                  type: array
                  items:
                    type: object
                    properties:
                      code:
                        type: string
                        example: WKR1
                      value:
                        type: array
                        items:
                          type: string
                        example: ["EXCELLENT"]
                      description:
                        type: string
                        example: ""
      responses:
        "200":
          description: Successfully submitted questionnaire
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  msg:
                    type: string
                    example: Successfully submitted questionnaire

  /weekly-review/nutritional-info:
    get:
      summary: Get nutritional information
      tags:
        - Weekly Review
      description: Fetch static nutritional information for weekly reviews.
      responses:
        "200":
          description: Nutritional information retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  msg:
                    type: string
                    example: successfully fetched nutritional information
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        header:
                          type: string
                          example: LoremIpsum
                        description:
                          type: string
                          example: LoremIpsum ista jndsjdn djs

  /weekly-review/progress-img:
    post:
      summary: Upload progress image
      tags:
        - Weekly Review
      description: Uploads a progress image for the specified member and week.
      parameters:
        - in: query
          name: memberCode
          required: true
          schema:
            type: string
          description: The unique code of the member
          example: KU
        - in: query
          name: week
          required: true
          schema:
            type: string
          description: The week for which the image is being uploaded
          example: 11Nov-17Nov-2024
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                image:
                  type: string
                  format: binary
                  description: The image file to upload
      responses:
        "200":
          description: Successful image upload
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  msg:
                    type: string
                    example: Successfully upload image
                  imgUrl:
                    type: string
                    example: ""
